{"version":3,"sources":["App.js","index.js"],"names":["App","useState","questionNumber","setQuestionNumber","score","setScore","questions","questionText","answerOptions","answerText","isCorrect","className","length","map","d","onClick","event","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAEe,SAASA,IAAO,IAAD,EACeC,mBAAS,GADxB,mBACtBC,EADsB,KACNC,EADM,OAEHF,mBAAS,GAFN,mBAEtBG,EAFsB,KAEfC,EAFe,KASvBC,EAAY,CACjB,CACCC,aAAc,iCACdC,cAAe,CACd,CAAEC,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,OAAQC,WAAW,KAGnC,CACCH,aAAc,uBACdC,cAAe,CACd,CAAEC,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,YAAaC,WAAW,GACtC,CAAED,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,aAAcC,WAAW,KAGzC,CACCH,aAAc,2CACdC,cAAe,CACd,CAAEC,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,YAAaC,WAAW,KAGxC,CACCH,aAAc,yCACdC,cAAe,CACd,CAAEC,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,MAKjC,OACC,oCACA,yBAAKC,UAAU,OACf,yBAAKA,UAAU,OAGbT,IAAmBI,EAAUM,OAC7BR,IAAUE,EAAUM,OACnB,yBAAKD,UAAU,iBAAf,8EACA,yBAAKA,UAAU,iBAAf,cAA2CP,EAA3C,WAA0DE,EAAUM,OAApE,gBAED,oCACC,yBAAKD,UAAU,oBACd,yBAAKA,UAAU,kBACd,0CAAgBT,EAAiB,GADlC,IAC6CI,EAAUM,QAEvD,yBAAKD,UAAU,iBAAiBL,EAAUJ,GAAgBK,eAE3D,yBAAKI,UAAU,kBAEZL,EAAUJ,GAAgBM,cAAcK,KAAI,SAAAC,GAAC,OAAK,4BAAQC,QAAS,SAAAC,GAAK,OAAuBF,EAAEJ,WA/DxFL,EAASD,EAAQ,QAChCD,EAAkBD,EAAiB,KA8DiFY,EAAEL,mBCjExHQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACnB,EAAD,OAEFoB,SAASC,eAAe,U","file":"static/js/main.d32c4f2c.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport default function App() {\n\tconst [questionNumber, setQuestionNumber] = useState(0);\n\tconst [score, setScore] = useState(0);\n\n\tconst handleClick = (event, isCorrect) => {\n\t\tif (isCorrect) setScore(score + 1);\n\t\tsetQuestionNumber(questionNumber + 1)\n\t  };\n\n\tconst questions = [\n\t\t{\n\t\t\tquestionText: 'What year did we start dating?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '2019', isCorrect: false },\n\t\t\t\t{ answerText: '2017', isCorrect: false },\n\t\t\t\t{ answerText: '2018', isCorrect: true },\n\t\t\t\t{ answerText: '2016', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Who is CEO of Tesla?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'The iPhone was created by which company?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'How many Harry Potter books are there?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '1', isCorrect: false },\n\t\t\t\t{ answerText: '4', isCorrect: false },\n\t\t\t\t{ answerText: '6', isCorrect: false },\n\t\t\t\t{ answerText: '7', isCorrect: true },\n\t\t\t],\n\t\t},\n\t];\n\n\treturn (\n\t\t<>\n\t\t<div className='bg'></div>\n\t\t<div className='app'>\n\t\t\t{/* HINT: replace \"false\" with logic to display the \n      score when the user has answered all the questions */}\n\t\t\t{questionNumber === questions.length ? (\n\t\t\t\tscore === questions.length ?\n\t\t\t\t(<div className='score-section'>You scored full points! Your prize is this code: SDFS-SDFG-SDFER-WRFS-SDFS</div>) : \n\t\t\t\t(<div className='score-section'>You scored {score} out of {questions.length}, try again!</div>)\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {questionNumber + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[questionNumber].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t questions[questionNumber].answerOptions.map(d => (<button onClick={event => handleClick(event, d.isCorrect)}>{d.answerText}</button>))\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t\t</>\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}